#定义LOG输出级别
log4j.rootLogger = debug, C, D, W, E
# 控制台打印
log4j.appender.C=org.apache.log4j.ConsoleAppender
log4j.appender.C.Target=System.out
log4j.appender.C.layout=org.apache.log4j.PatternLayout
log4j.appender.C.layout.ConversionPattern=%-d{yyyy-MM-dd HH:mm:ss}  [ %t:%r ] - [ %p ]  %m%n

# 每天产生一个日志文件
log4j.appender.D = org.apache.log4j.DailyRollingFileAppender
# 指定其编码方式log4j通过QuietWriter写日志，QuietWriter extends FilterWriter，FilterWriter extends Writer，而Writer写入的是字符流，对字符集比较敏感。英文系统一般默认latin-1字符集，只能处理半角，通过encoding指定字符集后，能够正确输出指定字符集的字符流。
log4j.appender.D.Encoding=UTF-8
# 当天日志保存到debug.log文件，前一天的日志文件名将被修改为debug.log + _yyyy-MM-dd.log
# log4j.appender.D.File =${scheduleProject}WEB-INF/logs/debug.log
log4j.appender.D.File =${catalina.home}/logs/debug.log
log4j.appender.D.DatePattern = '_'yyyy-MM-dd'.log'
# true表示消息增加到指定文件中，false则将消息覆盖指定的文件内容，默认值是true。
log4j.appender.D.Append = true
# 只输出DEBUG级别以上的日志
log4j.appender.D.Threshold = DEBUG
# 配置日志信息的格式-可以灵活地指定布局模式
log4j.appender.D.layout = org.apache.log4j.PatternLayout
# 设定以怎样的格式显示消息。
log4j.appender.D.layout.ConversionPattern = %-d{yyyy-MM-dd HH:mm:ss}  [ %t:%r ] - [ %p ]  %m%n

# 每天产生一个日志文件
log4j.appender.W =  org.apache.log4j.DailyRollingFileAppender
# 指定其编码方式log4j通过QuietWriter写日志，QuietWriter extends FilterWriter，FilterWriter extends Writer，而Writer写入的是字符流，对字符集比较敏感。英文系统一般默认latin-1字符集，只能处理半角，通过encoding指定字符集后，能够正确输出指定字符集的字符流。
log4j.appender.W.Encoding=UTF-8
# 当天日志保存到debug.log文件，前一天的日志文件名将被修改为debug.log + _yyyy-MM-dd.log
# log4j.appender.W.File = ${scheduleProject}WEB-INF/logs/erro.log
log4j.appender.W.File =${catalina.home}/logs/warn.log
log4j.appender.W.DatePattern = '_'yyyy-MM-dd'.log'
# true表示消息增加到指定文件中，false则将消息覆盖指定的文件内容，默认值是true。
log4j.appender.W.Append = true
# 只输出WARN级别以上的日志
log4j.appender.W.Threshold = WARN
# 配置日志信息的格式-可以灵活地指定布局模式
log4j.appender.W.layout = org.apache.log4j.PatternLayout
# 设定以怎样的格式显示消息。
log4j.appender.W.layout.ConversionPattern =%-d{yyyy-MM-dd HH\:mm\:ss}  [ %l\:%c\:%t\:%r ] - [ %p ]  %m%n

# 每天产生一个日志文件
log4j.appender.E =  org.apache.log4j.DailyRollingFileAppender
# 指定其编码方式log4j通过QuietWriter写日志，QuietWriter extends FilterWriter，FilterWriter extends Writer，而Writer写入的是字符流，对字符集比较敏感。英文系统一般默认latin-1字符集，只能处理半角，通过encoding指定字符集后，能够正确输出指定字符集的字符流。
log4j.appender.E.Encoding=UTF-8
# 当天日志保存到debug.log文件，前一天的日志文件名将被修改为debug.log + _yyyy-MM-dd.log
# log4j.appender.E.File = ${scheduleProject}WEB-INF/logs/erro.log
log4j.appender.E.File =${catalina.home}/logs/error.log
log4j.appender.E.DatePattern = '_'yyyy-MM-dd'.log'
# true表示消息增加到指定文件中，false则将消息覆盖指定的文件内容，默认值是true。
log4j.appender.E.Append = true
# 只输出ERROR级别以上的日志
log4j.appender.E.Threshold = ERROR
# 配置日志信息的格式-可以灵活地指定布局模式
log4j.appender.E.layout = org.apache.log4j.PatternLayout
# 设定以怎样的格式显示消息。
log4j.appender.E.layout.ConversionPattern =%-d{yyyy-MM-dd HH\:mm\:ss}  [ %l\:%c\:%t\:%r ] - [ %p ]  %m%n

log4j.logger.org.mybatis=DEBUG
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%5p %d %C\: %m%n